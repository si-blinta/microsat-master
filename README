11/04/2024:
    Tried sending solver data after parsing to DPUs : Failed 
    Tried parsing in DPUs : failed because we dont have access to sscanf.(pretty complex without it ).
    TODO :
        Retry sending data with another approach , maybe serialize solver data and send them.

12/04/2024:
    Understand MicroSat memory management, parsing , every feature.
    Make a document about it.
    Prepare questions.


WEEK 2 : 15 => 21
    -Code a logging interface for the solver.
    -Make the option of configurations.
    -Find a solution to do some Wram <> Mram switchs. (Fragment the data base into an array of databases).(super hard)
    -Code the portolio method:
        -Launch the host to get N formulas.
        -(modify directly the values of variables : for exmaple F1:
            a -b c,F2 = -a -b c)
        -Send each formula to a dpu.
        -Stop after a certain time, share with the host the learned clauses.
        -Host decides which are important
        -Host sends to dpus the important clauses.
        -If a Dpu has Sat : gg
        -If a Dpu has Unsat : : : : : give another job .
        -Restart the Dpus




NOTES : 

    RELAUNCHING : 
        -ONLY IF STOPPED.
        -FOR UNSAT : CHOOSE ANOTHER JOB.
        -SAT : STOP


TODO :  
    - MANAGE WHEN FIRST[LIT] == -9 IN ASSIGN DECISION 
    - ALSO APPLY PORTFOLIO
    - MANAGE THE MRAM BROADCAST : NOW WE SEND MEM MAX INSTEAD OF JUST MEMORY USED HUH 
    - CLEAN THE CODE . 

Dimanche 5 mai : 
    - Use Halt() and catch it for a sat or unsat: ( improve complexity )
    - Use a data structure to launch kernels dpu_args_t 
    - Add portfolio on tasklets to improve performance.
    - Try to share clauses.

Lundi 6 mai :
    - Look for intresting DIMACS.
    - Write a test script to run all DIMACS files and write the nb DPU/ms for each DIMACS.
    - Tests with sharing clauses / without.

Mardi 7 mai :
    - Add a config file for full debug / normal / competetion
    - Read the article of paraSatz ( mr utard et mr li).
    - Start expermenting divide and conquer.  






TODO : 
    USE A STACK INSTEAD OF A QUEUE .






TODO : 
    -IMPLEMENT LUBY RESTART.
    -SHARE LEARNT CLAUSE ( IMPLEMENT THE FUNCTIONS )
    -IMPLEMENT VSIDS:
        -ADDED SCORES.
        -ADD PARAMETERS OF DECAY AND BUMP AND WHEN TO DECAY.
        -IN analyse function, i must remove the bump of variables that are in the clause that caused conflict.
    -RESTART:
        -USE LBD RESTART : 
            -It consists of restarting whenever we have high lbd clauses, see ( https://univ-artois.hal.science/hal-03299473/file/preprint.pdf)
    semaine 1, jeudi : 
        -MÃ©canisme de suppression des clauses.